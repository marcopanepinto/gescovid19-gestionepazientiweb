package it.csi.gestionepazienti.gestionepazientiweb.mapper.test.generated;

import it.csi.gestionepazienti.gestionepazientiweb.dto.custom.TestExt;
import it.csi.gestionepazienti.gestionepazientiweb.dto.test.Test;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface TestMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated
     */
    @Delete({
        "delete from test",
        "where test_id = #{testId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long testId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated
     */
    @Insert({
        "insert into test (test_id, test_data_esecuzione, ",
        "test_range_riferimento, test_valore, ",
        "test_unita_misura, test_codice_esito, ",
        "test_laboratorio_desc, test_programma, ",
        "id_soggetto, test_esito_id, ",
        "test_tipo_id, test_richiesta_tipo_id, ",
        "intfrdet_id, utente_operazione, ",
        "data_creazione, data_modifica, ",
        "data_cancellazione)",
        "values (nextval('test_test_id_seq'), #{testDataEsecuzione,jdbcType=TIMESTAMP}, ",
        "#{testRangeRiferimento,jdbcType=VARCHAR}, #{testValore,jdbcType=VARCHAR}, ",
        "#{testUnitaMisura,jdbcType=VARCHAR}, #{testCodiceEsito,jdbcType=VARCHAR}, ",
        "#{testLaboratorioDesc,jdbcType=VARCHAR}, #{testProgramma,jdbcType=VARCHAR}, ",
        "#{idSoggetto,jdbcType=BIGINT}, #{testEsitoId,jdbcType=INTEGER}, ",
        "#{testTipoId,jdbcType=INTEGER}, #{testRichiestaTipoId,jdbcType=INTEGER}, ",
        "#{intfrdetId,jdbcType=INTEGER}, #{utenteOperazione,jdbcType=VARCHAR}, ",
        "#{dataCreazione,jdbcType=TIMESTAMP}, #{dataModifica,jdbcType=TIMESTAMP}, ",
        "#{dataCancellazione,jdbcType=TIMESTAMP})"
    })
    @Options(useGeneratedKeys = true, keyProperty = "testId", keyColumn = "test_id")
    int insert(Test record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "test_id, test_data_esecuzione, test_range_riferimento, test_valore, test_unita_misura, ",
        "test_codice_esito, test_laboratorio_desc, test_programma, id_soggetto, test_esito_id, ",
        "test_tipo_id, test_richiesta_tipo_id, intfrdet_id, utente_operazione, data_creazione, ",
        "data_modifica, data_cancellazione",
        "from test",
        "where test_id = #{testId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="test_id", property="testId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="test_data_esecuzione", property="testDataEsecuzione", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="test_range_riferimento", property="testRangeRiferimento", jdbcType=JdbcType.VARCHAR),
        @Result(column="test_valore", property="testValore", jdbcType=JdbcType.VARCHAR),
        @Result(column="test_unita_misura", property="testUnitaMisura", jdbcType=JdbcType.VARCHAR),
        @Result(column="test_codice_esito", property="testCodiceEsito", jdbcType=JdbcType.VARCHAR),
        @Result(column="test_laboratorio_desc", property="testLaboratorioDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="test_programma", property="testProgramma", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_soggetto", property="idSoggetto", jdbcType=JdbcType.BIGINT),
        @Result(column="test_esito_id", property="testEsitoId", jdbcType=JdbcType.INTEGER),
        @Result(column="test_tipo_id", property="testTipoId", jdbcType=JdbcType.INTEGER),
        @Result(column="test_richiesta_tipo_id", property="testRichiestaTipoId", jdbcType=JdbcType.INTEGER),
        @Result(column="intfrdet_id", property="intfrdetId", jdbcType=JdbcType.INTEGER),
        @Result(column="utente_operazione", property="utenteOperazione", jdbcType=JdbcType.VARCHAR),
        @Result(column="data_creazione", property="dataCreazione", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="data_modifica", property="dataModifica", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="data_cancellazione", property="dataCancellazione", jdbcType=JdbcType.TIMESTAMP)
    })
    Test selectByPrimaryKey(Long testId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "test_id, test_data_esecuzione, test_range_riferimento, test_valore, test_unita_misura, ",
        "test_codice_esito, test_laboratorio_desc, test_programma, id_soggetto, test_esito_id, ",
        "test_tipo_id, test_richiesta_tipo_id, intfrdet_id, utente_operazione, data_creazione, ",
        "data_modifica, data_cancellazione",
        "from test"
    })
    @Results({
        @Result(column="test_id", property="testId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="test_data_esecuzione", property="testDataEsecuzione", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="test_range_riferimento", property="testRangeRiferimento", jdbcType=JdbcType.VARCHAR),
        @Result(column="test_valore", property="testValore", jdbcType=JdbcType.VARCHAR),
        @Result(column="test_unita_misura", property="testUnitaMisura", jdbcType=JdbcType.VARCHAR),
        @Result(column="test_codice_esito", property="testCodiceEsito", jdbcType=JdbcType.VARCHAR),
        @Result(column="test_laboratorio_desc", property="testLaboratorioDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="test_programma", property="testProgramma", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_soggetto", property="idSoggetto", jdbcType=JdbcType.BIGINT),
        @Result(column="test_esito_id", property="testEsitoId", jdbcType=JdbcType.INTEGER),
        @Result(column="test_tipo_id", property="testTipoId", jdbcType=JdbcType.INTEGER),
        @Result(column="test_richiesta_tipo_id", property="testRichiestaTipoId", jdbcType=JdbcType.INTEGER),
        @Result(column="intfrdet_id", property="intfrdetId", jdbcType=JdbcType.INTEGER),
        @Result(column="utente_operazione", property="utenteOperazione", jdbcType=JdbcType.VARCHAR),
        @Result(column="data_creazione", property="dataCreazione", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="data_modifica", property="dataModifica", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="data_cancellazione", property="dataCancellazione", jdbcType=JdbcType.TIMESTAMP)
    })
    List<Test> selectAll();
    
    
    
    @Select({ 
    	 	"select                                                                                                                                                                  ",
    	    "a.test_id, a.test_data_esecuzione, a.test_range_riferimento,                                                                                                            ",
    	    "a.test_valore, a.test_unita_misura,                                                                                                                                     ",
    	    "a.test_codice_esito,                                                                                                                                                    ",
    	    "a.test_laboratorio_desc, a.test_programma,                                                                                                                              ",
    	    "c.test_esito_id, c.test_esito_cod, c.test_esito_desc,                                                                                                ",
    	    "d.test_tipo_id, d.test_tipo_cod, d.test_tipo_desc,                                                                                                    ",
    	    "e.test_richiesta_tipo_id, e.test_richiesta_tipo_cod, e.test_richiesta_tipo_desc,                                                                                                                 ",
    	    "b.id_soggetto, b.codice_fiscale, b.cognome, b.nome, b.data_nascita                                                                                   ",
    	    "from                                                                                                                                                                    ",
    	    "test a left join d_test_richiesta_tipo e on a.test_richiesta_tipo_id = e.test_richiesta_tipo_id, soggetto b , d_test_esito c, d_test_tipo d  ",
    	    "where                                                                                                                                                                   ",
    	    "a.id_soggetto =  #{idSoggetto,jdbcType=BIGINT} and                                                                                                                      ",
    	    "a.id_soggetto = b.id_soggetto and                                                                                                                                       ",
    	    "a.test_esito_id = c.test_esito_id and                                                                                                                                   ",
    	    "a.test_tipo_id = d.test_tipo_id --                                                                                                                                      ",
    	    "order by a.test_data_esecuzione desc nulls last                                                                                                                         ",
		    })
		    @Results({
		        @Result(column="test_id", property="testId", jdbcType=JdbcType.BIGINT, id=true),
		        @Result(column="test_data_esecuzione", property="testDataEsecuzione", jdbcType=JdbcType.TIMESTAMP),
		        @Result(column="test_range_riferimento", property="testRangeRiferimento", jdbcType=JdbcType.VARCHAR),
		        @Result(column="test_valore", property="testValore", jdbcType=JdbcType.VARCHAR),
		        @Result(column="test_unita_misura", property="testUnitaMisura", jdbcType=JdbcType.VARCHAR),
		        @Result(column="test_codice_esito", property="testCodiceEsito", jdbcType=JdbcType.VARCHAR),
		        @Result(column="test_laboratorio_desc", property="testLaboratorioDesc", jdbcType=JdbcType.VARCHAR),
		        @Result(column="test_programma", property="testProgramma", jdbcType=JdbcType.VARCHAR),
		        
		        @Result(column="test_esito_id", property="testEsito.testEsitoId", jdbcType=JdbcType.BIGINT),
		        @Result(column="test_esito_cod", property="testEsito.testEsitoCod", jdbcType=JdbcType.VARCHAR),
		        @Result(column="test_esito_desc", property="testEsito.testEsitoDesc", jdbcType=JdbcType.VARCHAR),
		        
		        @Result(column="test_tipo_id", property="testTipo.testTipoId", jdbcType=JdbcType.BIGINT),
		        @Result(column="test_tipo_cod", property="testTipo.testTipoCod", jdbcType=JdbcType.VARCHAR),
		        @Result(column="test_tipo_desc", property="testTipo.testTipoDesc", jdbcType=JdbcType.VARCHAR),
		        
		        @Result(column="test_richiesta_tipo_id", property="testRichiestaTipo.testRichiestaTipoId", jdbcType=JdbcType.BIGINT),
		        @Result(column="test_richiesta_tipo_cod", property="testRichiestaTipo.testRichiestaTipoCod", jdbcType=JdbcType.VARCHAR),
		        @Result(column="test_richiesta_tipo_desc", property="testRichiestaTipo.testRichiestaTipoDesc", jdbcType=JdbcType.VARCHAR),

		        @Result(column="utente_operazione", property="utenteOperazione", jdbcType=JdbcType.VARCHAR),
		        @Result(column="nome", property="utente.nome", jdbcType=JdbcType.VARCHAR),
		        @Result(column="cognome", property="utente.cognome", jdbcType=JdbcType.VARCHAR),
		        
		        @Result(column="id_soggetto", property="idSoggetto", jdbcType=JdbcType.BIGINT),
		        @Result(column="data_creazione", property="dataCreazione", jdbcType=JdbcType.TIMESTAMP),
		        @Result(column="data_modifica", property="dataModifica", jdbcType=JdbcType.TIMESTAMP)
		        
	})
    List<TestExt> selectTestBySoggettoId(Long idSoggetto);
    

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated
     */
    @Update({
        "update test",
        "set test_data_esecuzione = #{testDataEsecuzione,jdbcType=TIMESTAMP},",
          "test_range_riferimento = #{testRangeRiferimento,jdbcType=VARCHAR},",
          "test_valore = #{testValore,jdbcType=VARCHAR},",
          "test_unita_misura = #{testUnitaMisura,jdbcType=VARCHAR},",
          "test_codice_esito = #{testCodiceEsito,jdbcType=VARCHAR},",
          "test_laboratorio_desc = #{testLaboratorioDesc,jdbcType=VARCHAR},",
          "test_programma = #{testProgramma,jdbcType=VARCHAR},",
          "id_soggetto = #{idSoggetto,jdbcType=BIGINT},",
          "test_esito_id = #{testEsitoId,jdbcType=INTEGER},",
          "test_tipo_id = #{testTipoId,jdbcType=INTEGER},",
          "test_richiesta_tipo_id = #{testRichiestaTipoId,jdbcType=INTEGER},",
          "intfrdet_id = #{intfrdetId,jdbcType=INTEGER},",
          "utente_operazione = #{utenteOperazione,jdbcType=VARCHAR},",
          "data_creazione = #{dataCreazione,jdbcType=TIMESTAMP},",
          "data_modifica = #{dataModifica,jdbcType=TIMESTAMP},",
          "data_cancellazione = #{dataCancellazione,jdbcType=TIMESTAMP}",
        "where test_id = #{testId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Test record);
}