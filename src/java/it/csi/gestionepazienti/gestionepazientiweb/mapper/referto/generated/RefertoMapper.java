package it.csi.gestionepazienti.gestionepazientiweb.mapper.referto.generated;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import it.csi.gestionepazienti.gestionepazientiweb.dto.referto.Referto;

public interface RefertoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dmarefcovid_t_referto
     *
     * @mbg.generated
     */
    @Delete({
        "delete from dmarefcovid_t_referto",
        "where id_messaggio = #{idMessaggio,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer idMessaggio);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dmarefcovid_t_referto
     *
     * @mbg.generated
     */
    @Insert({
        "insert into dmarefcovid_t_referto (id_messaggio, codfisc, ",
        "cognome, nome, sesso, ",
        "datanascita, comunenascita, ",
        "legalauthenticator, cod_cl, ",
        "id_repository, id_documento, ",
        "id_aura, res_addr, ",
        "res_istat, dom_addr, ",
        "dom_istat, asr, id_struttura, ",
        "descr_struttura, matricola_struttura, ",
        "annullamento_episodio, documento_tipo_azione, ",
        "episodio_tipo_azione, data_creazione, ",
        "ts_msg_ricevuto, ts_cda2_elaborato, ",
        "asr_doc, cod_tipo_richiesta, ",
        "programma, asl_laboratorio, utenteoperazione)",
        "values (",
        "nextval('dmarefcovid_t_referto_id_messaggio_seq'), ",  //"#{idMessaggio,jdbcType=INTEGER}, "
        "#{codfisc,jdbcType=VARCHAR}, ",
        "#{cognome,jdbcType=VARCHAR}, #{nome,jdbcType=VARCHAR}, #{sesso,jdbcType=VARCHAR}, ",
        "#{datanascita,jdbcType=TIMESTAMP}, #{comunenascita,jdbcType=VARCHAR}, ",
        "#{legalauthenticator,jdbcType=VARCHAR}, #{codCl,jdbcType=VARCHAR}, ",
        "#{idRepository,jdbcType=VARCHAR}, #{idDocumento,jdbcType=VARCHAR}, ",
        "#{idAura,jdbcType=VARCHAR}, #{resAddr,jdbcType=VARCHAR}, ",
        "#{resIstat,jdbcType=VARCHAR}, #{domAddr,jdbcType=VARCHAR}, ",
        "#{domIstat,jdbcType=VARCHAR}, #{asr,jdbcType=VARCHAR}, #{idStruttura,jdbcType=BIGINT}, ",
        "#{descrStruttura,jdbcType=VARCHAR}, #{matricolaStruttura,jdbcType=VARCHAR}, ",
        "#{annullamentoEpisodio,jdbcType=VARCHAR}, #{documentoTipoAzione,jdbcType=VARCHAR}, ",
        "#{episodioTipoAzione,jdbcType=VARCHAR}, #{dataCreazione,jdbcType=TIMESTAMP}, ",
        "#{tsMsgRicevuto,jdbcType=TIMESTAMP}, #{tsCda2Elaborato,jdbcType=TIMESTAMP}, ",
        "#{asrDoc,jdbcType=VARCHAR}, #{codTipoRichiesta,jdbcType=VARCHAR}, ",
        "#{programma,jdbcType=VARCHAR}, #{aslLaboratorio,jdbcType=VARCHAR}, #{utenteoperazione,jdbcType=VARCHAR})"
    })
    @Options(useGeneratedKeys = true, keyProperty = "idMessaggio", keyColumn = "id_messaggio")
    int insert(Referto record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dmarefcovid_t_referto
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id_messaggio, codfisc, cognome, nome, sesso, datanascita, comunenascita, legalauthenticator, ",
        "cod_cl, id_repository, id_documento, id_aura, res_addr, res_istat, dom_addr, ",
        "dom_istat, asr, id_struttura, descr_struttura, matricola_struttura, annullamento_episodio, ",
        "documento_tipo_azione, episodio_tipo_azione, data_creazione, ts_msg_ricevuto, ",
        "ts_cda2_elaborato, asr_doc, cod_tipo_richiesta, programma, "
        + " ",
        "from dmarefcovid_t_referto",
        "where id_messaggio = #{idMessaggio,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id_messaggio", property="idMessaggio", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="codfisc", property="codfisc", jdbcType=JdbcType.VARCHAR),
        @Result(column="cognome", property="cognome", jdbcType=JdbcType.VARCHAR),
        @Result(column="nome", property="nome", jdbcType=JdbcType.VARCHAR),
        @Result(column="sesso", property="sesso", jdbcType=JdbcType.VARCHAR),
        @Result(column="datanascita", property="datanascita", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="comunenascita", property="comunenascita", jdbcType=JdbcType.VARCHAR),
        @Result(column="legalauthenticator", property="legalauthenticator", jdbcType=JdbcType.VARCHAR),
        @Result(column="cod_cl", property="codCl", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_repository", property="idRepository", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_documento", property="idDocumento", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_aura", property="idAura", jdbcType=JdbcType.VARCHAR),
        @Result(column="res_addr", property="resAddr", jdbcType=JdbcType.VARCHAR),
        @Result(column="res_istat", property="resIstat", jdbcType=JdbcType.VARCHAR),
        @Result(column="dom_addr", property="domAddr", jdbcType=JdbcType.VARCHAR),
        @Result(column="dom_istat", property="domIstat", jdbcType=JdbcType.VARCHAR),
        @Result(column="asr", property="asr", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_struttura", property="idStruttura", jdbcType=JdbcType.BIGINT),
        @Result(column="descr_struttura", property="descrStruttura", jdbcType=JdbcType.VARCHAR),
        @Result(column="matricola_struttura", property="matricolaStruttura", jdbcType=JdbcType.VARCHAR),
        @Result(column="annullamento_episodio", property="annullamentoEpisodio", jdbcType=JdbcType.VARCHAR),
        @Result(column="documento_tipo_azione", property="documentoTipoAzione", jdbcType=JdbcType.VARCHAR),
        @Result(column="episodio_tipo_azione", property="episodioTipoAzione", jdbcType=JdbcType.VARCHAR),
        @Result(column="data_creazione", property="dataCreazione", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ts_msg_ricevuto", property="tsMsgRicevuto", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ts_cda2_elaborato", property="tsCda2Elaborato", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="asr_doc", property="asrDoc", jdbcType=JdbcType.VARCHAR),
        @Result(column="cod_tipo_richiesta", property="codTipoRichiesta", jdbcType=JdbcType.VARCHAR),
        @Result(column="programma", property="programma", jdbcType=JdbcType.VARCHAR),
        @Result(column="asl_laboratorio", property="aslLaboratorio", jdbcType=JdbcType.VARCHAR)
    })
    Referto selectByPrimaryKey(Integer idMessaggio);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dmarefcovid_t_referto
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id_messaggio, codfisc, cognome, nome, sesso, datanascita, comunenascita, legalauthenticator, ",
        "cod_cl, id_repository, id_documento, id_aura, res_addr, res_istat, dom_addr, ",
        "dom_istat, asr, id_struttura, descr_struttura, matricola_struttura, annullamento_episodio, ",
        "documento_tipo_azione, episodio_tipo_azione, data_creazione, ts_msg_ricevuto, ",
        "ts_cda2_elaborato, asr_doc, cod_tipo_richiesta, programma, asl_laboratorio",
        "from dmarefcovid_t_referto"
    })
    @Results({
        @Result(column="id_messaggio", property="idMessaggio", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="codfisc", property="codfisc", jdbcType=JdbcType.VARCHAR),
        @Result(column="cognome", property="cognome", jdbcType=JdbcType.VARCHAR),
        @Result(column="nome", property="nome", jdbcType=JdbcType.VARCHAR),
        @Result(column="sesso", property="sesso", jdbcType=JdbcType.VARCHAR),
        @Result(column="datanascita", property="datanascita", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="comunenascita", property="comunenascita", jdbcType=JdbcType.VARCHAR),
        @Result(column="legalauthenticator", property="legalauthenticator", jdbcType=JdbcType.VARCHAR),
        @Result(column="cod_cl", property="codCl", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_repository", property="idRepository", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_documento", property="idDocumento", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_aura", property="idAura", jdbcType=JdbcType.VARCHAR),
        @Result(column="res_addr", property="resAddr", jdbcType=JdbcType.VARCHAR),
        @Result(column="res_istat", property="resIstat", jdbcType=JdbcType.VARCHAR),
        @Result(column="dom_addr", property="domAddr", jdbcType=JdbcType.VARCHAR),
        @Result(column="dom_istat", property="domIstat", jdbcType=JdbcType.VARCHAR),
        @Result(column="asr", property="asr", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_struttura", property="idStruttura", jdbcType=JdbcType.BIGINT),
        @Result(column="descr_struttura", property="descrStruttura", jdbcType=JdbcType.VARCHAR),
        @Result(column="matricola_struttura", property="matricolaStruttura", jdbcType=JdbcType.VARCHAR),
        @Result(column="annullamento_episodio", property="annullamentoEpisodio", jdbcType=JdbcType.VARCHAR),
        @Result(column="documento_tipo_azione", property="documentoTipoAzione", jdbcType=JdbcType.VARCHAR),
        @Result(column="episodio_tipo_azione", property="episodioTipoAzione", jdbcType=JdbcType.VARCHAR),
        @Result(column="data_creazione", property="dataCreazione", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ts_msg_ricevuto", property="tsMsgRicevuto", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ts_cda2_elaborato", property="tsCda2Elaborato", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="asr_doc", property="asrDoc", jdbcType=JdbcType.VARCHAR),
        @Result(column="cod_tipo_richiesta", property="codTipoRichiesta", jdbcType=JdbcType.VARCHAR),
        @Result(column="programma", property="programma", jdbcType=JdbcType.VARCHAR),
        @Result(column="asl_laboratorio", property="aslLaboratorio", jdbcType=JdbcType.VARCHAR)
    })
    List<Referto> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dmarefcovid_t_referto
     *
     * @mbg.generated
     */
    @Update({
        "update dmarefcovid_t_referto",
        "set codfisc = #{codfisc,jdbcType=VARCHAR},",
          "cognome = #{cognome,jdbcType=VARCHAR},",
          "nome = #{nome,jdbcType=VARCHAR},",
          "sesso = #{sesso,jdbcType=VARCHAR},",
          "datanascita = #{datanascita,jdbcType=TIMESTAMP},",
          "comunenascita = #{comunenascita,jdbcType=VARCHAR},",
          "legalauthenticator = #{legalauthenticator,jdbcType=VARCHAR},",
          "cod_cl = #{codCl,jdbcType=VARCHAR},",
          "id_repository = #{idRepository,jdbcType=VARCHAR},",
          "id_documento = #{idDocumento,jdbcType=VARCHAR},",
          "id_aura = #{idAura,jdbcType=VARCHAR},",
          "res_addr = #{resAddr,jdbcType=VARCHAR},",
          "res_istat = #{resIstat,jdbcType=VARCHAR},",
          "dom_addr = #{domAddr,jdbcType=VARCHAR},",
          "dom_istat = #{domIstat,jdbcType=VARCHAR},",
          "asr = #{asr,jdbcType=VARCHAR},",
          "id_struttura = #{idStruttura,jdbcType=BIGINT},",
          "descr_struttura = #{descrStruttura,jdbcType=VARCHAR},",
          "matricola_struttura = #{matricolaStruttura,jdbcType=VARCHAR},",
          "annullamento_episodio = #{annullamentoEpisodio,jdbcType=VARCHAR},",
          "documento_tipo_azione = #{documentoTipoAzione,jdbcType=VARCHAR},",
          "episodio_tipo_azione = #{episodioTipoAzione,jdbcType=VARCHAR},",
          "data_creazione = #{dataCreazione,jdbcType=TIMESTAMP},",
          "ts_msg_ricevuto = #{tsMsgRicevuto,jdbcType=TIMESTAMP},",
          "ts_cda2_elaborato = #{tsCda2Elaborato,jdbcType=TIMESTAMP},",
          "asr_doc = #{asrDoc,jdbcType=VARCHAR},",
          "cod_tipo_richiesta = #{codTipoRichiesta,jdbcType=VARCHAR},",
          "programma = #{programma,jdbcType=VARCHAR},",
          "asl_laboratorio = #{aslLaboratorio,jdbcType=VARCHAR}",
        "where id_messaggio = #{idMessaggio,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Referto record);
    
    @Select({
    	"select",
        "id_messaggio, codfisc, cognome, nome, sesso, datanascita, comunenascita, legalauthenticator, ",
        "cod_cl, id_repository, id_documento, id_aura, res_addr, res_istat, dom_addr, ",
        "dom_istat, asr, id_struttura, descr_struttura, matricola_struttura, annullamento_episodio, ",
        "documento_tipo_azione, episodio_tipo_azione, data_creazione, ts_msg_ricevuto, ",
        "ts_cda2_elaborato, asr_doc, cod_tipo_richiesta, programma, asl_laboratorio",
        "from dmarefcovid_t_referto",
        "where codfisc = #{codiceFiscale,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id_messaggio", property="idMessaggio", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="codfisc", property="codfisc", jdbcType=JdbcType.VARCHAR),
        @Result(column="cognome", property="cognome", jdbcType=JdbcType.VARCHAR),
        @Result(column="nome", property="nome", jdbcType=JdbcType.VARCHAR),
        @Result(column="sesso", property="sesso", jdbcType=JdbcType.VARCHAR),
        @Result(column="datanascita", property="datanascita", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="comunenascita", property="comunenascita", jdbcType=JdbcType.VARCHAR),
        @Result(column="legalauthenticator", property="legalauthenticator", jdbcType=JdbcType.VARCHAR),
        @Result(column="cod_cl", property="codCl", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_repository", property="idRepository", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_documento", property="idDocumento", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_aura", property="idAura", jdbcType=JdbcType.VARCHAR),
        @Result(column="res_addr", property="resAddr", jdbcType=JdbcType.VARCHAR),
        @Result(column="res_istat", property="resIstat", jdbcType=JdbcType.VARCHAR),
        @Result(column="dom_addr", property="domAddr", jdbcType=JdbcType.VARCHAR),
        @Result(column="dom_istat", property="domIstat", jdbcType=JdbcType.VARCHAR),
        @Result(column="asr", property="asr", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_struttura", property="idStruttura", jdbcType=JdbcType.BIGINT),
        @Result(column="descr_struttura", property="descrStruttura", jdbcType=JdbcType.VARCHAR),
        @Result(column="matricola_struttura", property="matricolaStruttura", jdbcType=JdbcType.VARCHAR),
        @Result(column="annullamento_episodio", property="annullamentoEpisodio", jdbcType=JdbcType.VARCHAR),
        @Result(column="documento_tipo_azione", property="documentoTipoAzione", jdbcType=JdbcType.VARCHAR),
        @Result(column="episodio_tipo_azione", property="episodioTipoAzione", jdbcType=JdbcType.VARCHAR),
        @Result(column="data_creazione", property="dataCreazione", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ts_msg_ricevuto", property="tsMsgRicevuto", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ts_cda2_elaborato", property="tsCda2Elaborato", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="asr_doc", property="asrDoc", jdbcType=JdbcType.VARCHAR)
    })
    List<Referto> selectByCF(String codiceFiscale);
    
    @Select({
    	 "select ref.id_messaggio, codfisc, cognome, nome, sesso, datanascita, comunenascita, legalauthenticator,",
    	 "cod_cl, id_repository, id_documento, id_aura, res_addr, res_istat, dom_addr,                          " ,
    	 "dom_istat, asr, id_struttura, descr_struttura, matricola_struttura, annullamento_episodio,            " ,
    	 "documento_tipo_azione, episodio_tipo_azione, ref.data_creazione, ts_msg_ricevuto,                     " ,
    	 "ts_cda2_elaborato, asr_doc, cod_tipo_richiesta, programma, asl_laboratorio                            " ,
    	 "from dmarefcovid_t_referto ref                                                                        " ,
    	 "left join dmarefcovid_t_referto_det det on det.id_messaggio = ref.id_messaggio                        " ,
    	 // 26-08-20 Inserito cod_tipo_richiesta 05 per campagna di screening scolastico
    	 "where value_code = 'P' and ref.cod_tipo_richiesta in ('01','02','03','04','05','08','09') ",
    	 "and not exists (" + 
    	 "              select 1 from dmarefcovid_l_elaborazione_referto dler", 
    	 "              where det.intfrdet_id = dler.intfrdet_id)", 
    	 " union ",
    	 "select ref.id_messaggio, codfisc, cognome, nome, sesso, datanascita, comunenascita, legalauthenticator,   ",
    	 "    	 cod_cl, id_repository, id_documento, id_aura, res_addr, res_istat, dom_addr,                       ",
    	 "    	 dom_istat, asr, id_struttura, descr_struttura, matricola_struttura, annullamento_episodio,         ",
    	 "    	 documento_tipo_azione, episodio_tipo_azione, ref.data_creazione, ts_msg_ricevuto,                  ",
    	 "    	 ts_cda2_elaborato, asr_doc, cod_tipo_richiesta, programma, asl_laboratorio                         ",
    	 "    	from dmarefcovid_t_referto ref                                                                      ",
    	 "    	 left join dmarefcovid_t_referto_det det on det.id_messaggio = ref.id_messaggio                     ",
    	 "    	where value_code = 'N'                                                                           ",
    	 "    	 and upper(det.code_code) in ('91.12.S','91.12.8')                                                             ",
    	 "    	 and ref.cod_tipo_richiesta in ('01','02','03','04','08','09')                                      ",
    	 "    	 and not exists (", 
    	 "                    select 1 from dmarefcovid_l_elaborazione_referto dler", 
    	 "                    where det.intfrdet_id = dler.intfrdet_id) ",
    	 " union", 
    	 "         select ref.id_messaggio, codfisc, cognome, nome, sesso, datanascita, comunenascita, legalauthenticator,   ", 
    	 "       cod_cl, id_repository, id_documento, id_aura, res_addr, res_istat, dom_addr,                       ", 
    	 "       dom_istat, asr, id_struttura, descr_struttura, matricola_struttura, annullamento_episodio,         ", 
    	 "       documento_tipo_azione, episodio_tipo_azione, ref.data_creazione, ts_msg_ricevuto,                  ", 
    	 "       ts_cda2_elaborato, asr_doc, 'ND' , 'ND', asr                       ", 
    	 "       from dmarefcovid_t_referto_det ref ,dmarefcovid_t_referto ref_test               ", 
    	 "       where  ", 
    	 "	   ref.id_messaggio= ref_test.id_messaggio ", 
    	 "       and ref.value_code = 'N'  ", 
    	 "       and upper(ref.code_code) in ('91.12.S','91.12.8')                                       ", 
    	 "       and ref_test.cod_tipo_richiesta is null  ", 
    	 "       and trunc(ref_test.data_creazione) > to_date('10/07/2020','dd/mm/yyyy')                ", 
    	 "	   and exists ( ", 
    	 "                select 1 from dmarefcovid_l_elaborazione_referto dler  ", 
    	 "                where dler.elabdet_scarto = true ", 
    	 "				and ref.intfrdet_id=dler.intfrdet_id ", 
    	 //"                --and dler.elabdet_scarto_motivo like 'Soggetto non trovato in piattaforma%'  ", 
    	 "                  and dler.scartomotivo_id = 1 ", 
    	 "       ) ", 
    	 "       and not exists ( ", 
    	 "   	            select * from soggetto x ", 
    	 "   				where x.codice_fiscale = ref_test.codfisc ", 
    	 "       ) ", 
    	 "       and not exists ( ", 
    	 "                select * from soggetto x ", 
    	 "                where x.cognome = ref_test.cognome ", 
    	 "                and x.nome = ref_test.nome ", 
    	 "                and trunc(x.data_nascita) = trunc(ref_test.datanascita) ", 
    	 "       )	",
    })                                                                                                          
    @Results({
        @Result(column="id_messaggio", property="idMessaggio", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="codfisc", property="codfisc", jdbcType=JdbcType.VARCHAR),
        @Result(column="cognome", property="cognome", jdbcType=JdbcType.VARCHAR),
        @Result(column="nome", property="nome", jdbcType=JdbcType.VARCHAR),
        @Result(column="sesso", property="sesso", jdbcType=JdbcType.VARCHAR),
        @Result(column="datanascita", property="datanascita", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="comunenascita", property="comunenascita", jdbcType=JdbcType.VARCHAR),
        @Result(column="legalauthenticator", property="legalauthenticator", jdbcType=JdbcType.VARCHAR),
        @Result(column="cod_cl", property="codCl", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_repository", property="idRepository", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_documento", property="idDocumento", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_aura", property="idAura", jdbcType=JdbcType.VARCHAR),
        @Result(column="res_addr", property="resAddr", jdbcType=JdbcType.VARCHAR),
        @Result(column="res_istat", property="resIstat", jdbcType=JdbcType.VARCHAR),
        @Result(column="dom_addr", property="domAddr", jdbcType=JdbcType.VARCHAR),
        @Result(column="dom_istat", property="domIstat", jdbcType=JdbcType.VARCHAR),
        @Result(column="asr", property="asr", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_struttura", property="idStruttura", jdbcType=JdbcType.BIGINT),
        @Result(column="descr_struttura", property="descrStruttura", jdbcType=JdbcType.VARCHAR),
        @Result(column="matricola_struttura", property="matricolaStruttura", jdbcType=JdbcType.VARCHAR),
        @Result(column="annullamento_episodio", property="annullamentoEpisodio", jdbcType=JdbcType.VARCHAR),
        @Result(column="documento_tipo_azione", property="documentoTipoAzione", jdbcType=JdbcType.VARCHAR),
        @Result(column="episodio_tipo_azione", property="episodioTipoAzione", jdbcType=JdbcType.VARCHAR),
        @Result(column="data_creazione", property="dataCreazione", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ts_msg_ricevuto", property="tsMsgRicevuto", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ts_cda2_elaborato", property="tsCda2Elaborato", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="asr_doc", property="asrDoc", jdbcType=JdbcType.VARCHAR),
        @Result(column="asl_laboratorio", property="aslLaboratorio", jdbcType=JdbcType.VARCHAR),
        @Result(column="cod_tipo_richiesta", property="codTipoRichiesta", jdbcType=JdbcType.VARCHAR),
        @Result(column="programma", property="programma", jdbcType=JdbcType.VARCHAR),
        @Result(column="utenteoperazione", property="utenteoperazione", jdbcType=JdbcType.VARCHAR),
    })
    List<Referto> selectPositiviNotElabAndSceening(@Param("list") List<String>  codiciTipoRichiesta);
    
    
    @Select({
   	 "select test_esito_id from d_test_esito where test_esito_cod = #{valueCode,jdbcType=VARCHAR} "
   })
    Integer decodeValueCode(String valueCode);
    
    @Select({
      	 "select test_tipo_id from d_test_tipo where test_tipo_cod = #{tipoTest,jdbcType=VARCHAR} "
      })
    Integer decodeTipoTest(String tipoTest);
    
    @Select({
     	 "select test_richiesta_tipo_id from d_test_richiesta_tipo where test_richiesta_tipo_cod = #{tipoRichiesta,jdbcType=VARCHAR} "
     })
    Integer decodeCodTipoRichiesta(String tipoRichiesta);
    
    
    
    @Select({
    	"select",
        "id_messaggio, codfisc, cognome, nome, sesso, datanascita, comunenascita, legalauthenticator, ",
        "cod_cl, id_repository, id_documento, id_aura, res_addr, res_istat, dom_addr, ",
        "dom_istat, asr, id_struttura, descr_struttura, matricola_struttura, annullamento_episodio, ",
        "documento_tipo_azione, episodio_tipo_azione, data_creazione, ts_msg_ricevuto, ",
        "ts_cda2_elaborato, asr_doc, cod_tipo_richiesta, programma, asl_laboratorio",
        "from dmarefcovid_t_referto",
        "where codfisc = #{codiceFiscale,jdbcType=VARCHAR} ",
        "and cod_tipo_richiesta =  #{codTipoRichiesta,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id_messaggio", property="idMessaggio", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="codfisc", property="codfisc", jdbcType=JdbcType.VARCHAR),
        @Result(column="cognome", property="cognome", jdbcType=JdbcType.VARCHAR),
        @Result(column="nome", property="nome", jdbcType=JdbcType.VARCHAR),
        @Result(column="sesso", property="sesso", jdbcType=JdbcType.VARCHAR),
        @Result(column="datanascita", property="datanascita", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="comunenascita", property="comunenascita", jdbcType=JdbcType.VARCHAR),
        @Result(column="legalauthenticator", property="legalauthenticator", jdbcType=JdbcType.VARCHAR),
        @Result(column="cod_cl", property="codCl", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_repository", property="idRepository", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_documento", property="idDocumento", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_aura", property="idAura", jdbcType=JdbcType.VARCHAR),
        @Result(column="res_addr", property="resAddr", jdbcType=JdbcType.VARCHAR),
        @Result(column="res_istat", property="resIstat", jdbcType=JdbcType.VARCHAR),
        @Result(column="dom_addr", property="domAddr", jdbcType=JdbcType.VARCHAR),
        @Result(column="dom_istat", property="domIstat", jdbcType=JdbcType.VARCHAR),
        @Result(column="asr", property="asr", jdbcType=JdbcType.VARCHAR),
        @Result(column="id_struttura", property="idStruttura", jdbcType=JdbcType.BIGINT),
        @Result(column="descr_struttura", property="descrStruttura", jdbcType=JdbcType.VARCHAR),
        @Result(column="matricola_struttura", property="matricolaStruttura", jdbcType=JdbcType.VARCHAR),
        @Result(column="annullamento_episodio", property="annullamentoEpisodio", jdbcType=JdbcType.VARCHAR),
        @Result(column="documento_tipo_azione", property="documentoTipoAzione", jdbcType=JdbcType.VARCHAR),
        @Result(column="episodio_tipo_azione", property="episodioTipoAzione", jdbcType=JdbcType.VARCHAR),
        @Result(column="data_creazione", property="dataCreazione", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ts_msg_ricevuto", property="tsMsgRicevuto", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ts_cda2_elaborato", property="tsCda2Elaborato", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="asr_doc", property="asrDoc", jdbcType=JdbcType.VARCHAR)
    })
    List<Referto> selectByCFAndCodTipoRichiesta(@Param("codiceFiscale") String codiceFiscale,@Param("codTipoRichiesta") String codTipoRichiesta);
}