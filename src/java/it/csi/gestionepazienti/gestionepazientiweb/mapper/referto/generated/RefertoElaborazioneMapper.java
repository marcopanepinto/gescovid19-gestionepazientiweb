package it.csi.gestionepazienti.gestionepazientiweb.mapper.referto.generated;

import it.csi.gestionepazienti.gestionepazientiweb.dto.referto.RefertoElaborazione;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface RefertoElaborazioneMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dmarefcovid_l_elaborazione_referto
     *
     * @mbg.generated
     */
    @Delete({
        "delete from dmarefcovid_l_elaborazione_referto",
        "where elabdet_id = #{elabdetId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long elabdetId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dmarefcovid_l_elaborazione_referto
     *
     * @mbg.generated
     */
    @Insert({
        "insert into dmarefcovid_l_elaborazione_referto (elabdet_id, elab_id, ",
        "intfrdet_id, elabdet_scarto, ",
        "elabdet_scarto_motivo, query_eseguita, ",
        "data_creazione, utente_operazione, ",
        "scartomotivo_id)",
        "values (nextval('dmarefcovid_l_elaborazione_referto_elabdet_id_seq'), #{elabId,jdbcType=BIGINT}, ",
        "#{intfrdetId,jdbcType=INTEGER}, #{elabdetScarto,jdbcType=BIT}, ",
        "#{elabdetScartoMotivo,jdbcType=VARCHAR}, #{queryEseguita,jdbcType=VARCHAR}, ",
        "#{dataCreazione,jdbcType=TIMESTAMP}, #{utenteOperazione,jdbcType=VARCHAR}, ",
        "#{scartomotivoId,jdbcType=INTEGER})"
    })
    @Options(useGeneratedKeys = true, keyProperty = "elabdet_id")
    int insert(RefertoElaborazione record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dmarefcovid_l_elaborazione_referto
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "elabdet_id, elab_id, intfrdet_id, elabdet_scarto, elabdet_scarto_motivo, query_eseguita, ",
        "data_creazione, utente_operazione, scartomotivo_id",
        "from dmarefcovid_l_elaborazione_referto",
        "where elabdet_id = #{elabdetId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="elabdet_id", property="elabdetId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="elab_id", property="elabId", jdbcType=JdbcType.BIGINT),
        @Result(column="intfrdet_id", property="intfrdetId", jdbcType=JdbcType.INTEGER),
        @Result(column="elabdet_scarto", property="elabdetScarto", jdbcType=JdbcType.BIT),
        @Result(column="elabdet_scarto_motivo", property="elabdetScartoMotivo", jdbcType=JdbcType.VARCHAR),
        @Result(column="query_eseguita", property="queryEseguita", jdbcType=JdbcType.VARCHAR),
        @Result(column="data_creazione", property="dataCreazione", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="utente_operazione", property="utenteOperazione", jdbcType=JdbcType.VARCHAR),
        @Result(column="scartomotivo_id", property="scartomotivoId", jdbcType=JdbcType.INTEGER)
    })
    RefertoElaborazione selectByPrimaryKey(Long elabdetId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dmarefcovid_l_elaborazione_referto
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "elabdet_id, elab_id, intfrdet_id, elabdet_scarto, elabdet_scarto_motivo, query_eseguita, ",
        "data_creazione, utente_operazione, scartomotivo_id",
        "from dmarefcovid_l_elaborazione_referto"
    })
    @Results({
        @Result(column="elabdet_id", property="elabdetId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="elab_id", property="elabId", jdbcType=JdbcType.BIGINT),
        @Result(column="intfrdet_id", property="intfrdetId", jdbcType=JdbcType.INTEGER),
        @Result(column="elabdet_scarto", property="elabdetScarto", jdbcType=JdbcType.BIT),
        @Result(column="elabdet_scarto_motivo", property="elabdetScartoMotivo", jdbcType=JdbcType.VARCHAR),
        @Result(column="query_eseguita", property="queryEseguita", jdbcType=JdbcType.VARCHAR),
        @Result(column="data_creazione", property="dataCreazione", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="utente_operazione", property="utenteOperazione", jdbcType=JdbcType.VARCHAR),
        @Result(column="scartomotivo_id", property="scartomotivoId", jdbcType=JdbcType.INTEGER)
    })
    List<RefertoElaborazione> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dmarefcovid_l_elaborazione_referto
     *
     * @mbg.generated
     */
    @Update({
        "update dmarefcovid_l_elaborazione_referto",
        "set elab_id = #{elabId,jdbcType=BIGINT},",
          "intfrdet_id = #{intfrdetId,jdbcType=INTEGER},",
          "elabdet_scarto = #{elabdetScarto,jdbcType=BIT},",
          "elabdet_scarto_motivo = #{elabdetScartoMotivo,jdbcType=VARCHAR},",
          "query_eseguita = #{queryEseguita,jdbcType=VARCHAR},",
          "data_creazione = #{dataCreazione,jdbcType=TIMESTAMP},",
          "utente_operazione = #{utenteOperazione,jdbcType=VARCHAR},",
          "scartomotivo_id = #{scartomotivoId,jdbcType=INTEGER}",
        "where elabdet_id = #{elabdetId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(RefertoElaborazione record);
    
    
    
    @Update({
        "update dmarefcovid_l_elaborazione_referto ", 
        " set ", 
        " elabdet_scarto = false, ",
        " query_eseguita='scarto originale per sogg non trovato - elaborato come screening' ", 
        " where intfrdet_id = #{intfrdetId,jdbcType=INTEGER} ", 
        " and elabdet_scarto = true ", 
        " and scartomotivo_id = 1"
    })
    int chiudiScarto(Integer intfrdetId);
}